//url: https://leetcode.com/problems/maximum-length-of-repeated-subarray/
//medium
class Solution {
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) {
        int n1=nums1.size();
        int n2=nums2.size();
        vector<vector<int>>v1(n1,vector<int>(n2,-1));
        for(int i=0;i<n1;i++)
        {
            for(int j=0;j<n2;j++)
            {
                if(nums1[i]==nums2[j])
                {
                    v1[i][j]=1;
                    if(i-1>=0 && j-1>=0 && v1[i-1][j-1]!=-1)
                    {
                        v1[i][j]=v1[i][j]+v1[i-1][j-1];
                    }
                }
            }
        }
        int count=INT_MIN;
        for(int i=0;i<n1;i++)
        {
            for(int j=0;j<n2;j++)
            {
                count=max(count,v1[i][j]);
            }
        }
        if(count==-1)
        {
            return 0;
        }
        return count;
    }
};
