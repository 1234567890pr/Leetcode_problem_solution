// URL:https://leetcode.com/problems/minimum-score-of-a-path-between-two-cities/
class Solution {
public:
    int minScore(int n, vector<vector<int>>& roads) {
        vector<vector<int>>v1(n+1);
        vector<vector<int>>w1(n+1);
        for(int i=0;i<roads.size();i++)
        {
            v1[roads[i][0]].push_back(roads[i][1]);
            v1[roads[i][1]].push_back(roads[i][0]);
            w1[roads[i][0]].push_back(roads[i][2]);
            w1[roads[i][1]].push_back(roads[i][2]);
        }
        vector<bool>check(n+1,false);
        vector<int>ex;
        queue<int>q1;
        q1.push(n);
        while(!q1.empty())
        {
            int a=q1.front();
            check[a]=true;
            ex.push_back(a);
            q1.pop();
            for(auto val : v1[a])
            {
                if(check[val])
                {
                    continue;
                }
                q1.push(val);
                check[val]=true;
            }
        }
        int result=INT_MAX;
        for(int i=0;i<ex.size();i++)
        {
            for(auto val : w1[ex[i]])
            {
                result= min(result,val);
            }
        }
        return result;
    }
};
