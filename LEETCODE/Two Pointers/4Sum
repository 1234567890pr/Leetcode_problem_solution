//url :https://leetcode.com/problems/4sum/
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>>v1;
        if(nums.size()<4)
        {
            return v1;
        }
        set<vector<int>>st;
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++)
        {
            for(int j=i+1;j<nums.size();j++)
            {
                int p=j+1;
                int q=nums.size()-1;
                while(p<q)
                {
                    long long int sum=(long long )nums[i]+nums[j]+nums[p]+nums[q];
                    if(sum==target)
                    {
                        st.insert({nums[i],nums[j],nums[p],nums[q]});
                        while(p+1<nums.size() && nums[p]==nums[p+1])
                        {
                            p++;
                        }
                        while(q-1>=0 && nums[q]==nums[q-1])
                        {
                            q--;
                        }
                        p++;
                        q--;
                    }
                    else if(sum>target)
                    {
                        q--;
                    }
                    else
                    {
                        p++;
                    }
                }
            }
        }
        for(auto it= st.begin();it != st.end();it++)
        {
            v1.push_back(*it);
        }
        return v1;
    }
};
