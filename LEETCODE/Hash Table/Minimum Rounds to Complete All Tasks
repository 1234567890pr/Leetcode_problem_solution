//url:https://leetcode.com/problems/minimum-rounds-to-complete-all-tasks/
class Solution {
public:
    int minimumRounds(vector<int>& tasks) {
        int count=0;
        map<int,int>m1;
        for(int i=0;i<tasks.size();i++)
        {
            m1[tasks[i]]++;
        }
        for(auto it=m1.begin();it != m1.end();it++)
        {
            if(it->second==1)
            {
                return -1;
            }
            else
            {
                if(it->second==5)
                {
                    count=count+2;
                }
                else if(it->second==4)
                {
                    count+=2;
                }
                else if(it->second==3 || it->second==2)
                {
                    count+=1;
                }
                else
                {
                    if(it->second%3==1)
                    {
                        int a=it->second-4;
                        count=count+a/3;
                        count+=2;
                    }
                    else
                    {
                        int b=it->second%3;
                        count=count+it->second/3 +b/2;
                    }
                }
            }
        }
        return count;
    }
};
