//url :https://leetcode.com/problems/reward-top-k-students/
bool f1(const pair<int,int>&i,const pair<int,int>&j)
    {
        if(i.first==j.first)
        {
            return i.second<j.second;
        }
    return i.first>j.first;
    }
class Solution {
public:
    vector<int> topStudents(vector<string>& positive_feedback, vector<string>& negative_feedback, vector<string>& report, vector<int>& student_id, int k) {
        set<string>s1;
        for(int i=0;i<positive_feedback.size();i++)
        {
            s1.insert(positive_feedback[i]);
        }
        set<string>s2;
        for(int i=0;i<negative_feedback.size();i++)
        {
            s2.insert(negative_feedback[i]);
        }
        vector<pair<int,int>>v1;
        for(int i=0;i<report.size();i++)
        {
            string s3="";
            int a=0;
            int point=0;
            for(int j=0;j<report[i].size();j++)
            {
                if(report[i][j]==' ')
                {
                    if(s1.find(s3)!=s1.end())
                    {
                        point=point+3;
                    }
                    else if(s2.find(s3)!=s2.end())
                    {
                        point=point-1;
                    }
                    s3="";
                    a=1;
                }
                else
                {
                    s3+=report[i][j];
                    a=0;
                }
            }
            if(a==0)
            {
                if(s1.find(s3)!=s1.end())
                {
                    point=point+3;
                }
                else if(s2.find(s3)!=s2.end())
                {
                    point=point-1;
                }
            }
            v1.push_back({point,student_id[i]});
        }
        sort(v1.begin(),v1.end(),f1);
        vector<int>v2;
        for(int i=0;i<k;i++)
        {
            v2.push_back(v1[i].second);
        }
        return v2;
    }
};
