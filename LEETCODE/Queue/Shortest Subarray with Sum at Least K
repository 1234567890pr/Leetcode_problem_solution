//url:https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k/
class Solution {
public:
    int shortestSubarray(vector<int>& nums, int k) {
        deque<pair<long long int,long long int>>q1;
        long long int sum=0;
        int result=INT_MAX;
        for(int i=0;i<nums.size();i++)
        {
            sum+=nums[i];
            if(sum>=k)
            {
                result=min(result,i+1);
            }
            pair<long long int ,long long int>cur(INT_MIN,INT_MIN);
            while(!q1.empty() && (sum-q1.front().first)>=k)
            {
                cur=q1.front();
                q1.pop_front();
            }
            if(cur.second != INT_MIN)
            {
                int a=i-cur.second;
                result=min(result,a);
            }
            while(!q1.empty() && sum<=q1.back().first)
            {
                q1.pop_back();
            }
            q1.push_back({sum,i});
        }
        if(result==INT_MAX)
        {
            return -1;
        }
        return result;
    }
};
